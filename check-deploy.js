const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É frontend
const frontendPath = path.join(__dirname, 'frontend');
const publicPath = path.join(frontendPath, 'public');
const srcPath = path.join(frontendPath, 'src');

console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤:');

// –°–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
const requiredFiles = [
  'frontend/package.json',
  'frontend/public/index.html',
  'frontend/public/manifest.json',
  'frontend/src/App.js',
  'frontend/src/index.js',
  'netlify.toml'
];

let allFilesExist = true;

requiredFiles.forEach(file => {
  const filePath = path.join(__dirname, file);
  if (fs.existsSync(filePath)) {
    console.log(`‚úÖ ${file}`);
  } else {
    console.log(`‚ùå ${file} - –û–¢–°–£–¢–°–¢–í–£–ï–¢!`);
    allFilesExist = false;
  }
});

console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json:');
try {
  const packageJson = require('./frontend/package.json');
  console.log(`‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ: ${packageJson.name}`);
  console.log(`‚úÖ –í–µ—Ä—Å–∏—è: ${packageJson.version}`);
  console.log(`‚úÖ Scripts build: ${packageJson.scripts?.build ? '–µ—Å—Ç—å' : '–û–¢–°–£–¢–°–¢–í–£–ï–¢!'}`);
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è package.json:', error.message);
  allFilesExist = false;
}

console.log('\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ index.html:');
try {
  const indexPath = path.join(frontendPath, 'public', 'index.html');
  const indexContent = fs.readFileSync(indexPath, 'utf8');
  
  if (indexContent.includes('<div id="root">')) {
    console.log('‚úÖ Root div –Ω–∞–π–¥–µ–Ω');
  } else {
    console.log('‚ùå Root div –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!');
  }
  
  if (indexContent.includes('telegram-web-app.js')) {
    console.log('‚úÖ Telegram SDK –ø–æ–¥–∫–ª—é—á–µ–Ω');
  } else {
    console.log('‚ö†Ô∏è  Telegram SDK –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è index.html:', error.message);
  allFilesExist = false;
}

console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:');
if (allFilesExist) {
  console.log('üéâ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ! –ì–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Netlify.');
  console.log('\nüìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Netlify:');
  console.log('   Base directory: frontend');
  console.log('   Build command: npm run build');
  console.log('   Publish directory: build');
  process.exit(0);
} else {
  console.log('‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã! –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º.');
  process.exit(1);
}