// –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–æ–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ backend

export const mockProducts = [
  {
    id: 1,
    name: "–°—ã—Ä –†–æ—Å—Å–∏–π—Å–∫–∏–π –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π",
    description: "–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π —Ç–≤—ë—Ä–¥—ã–π —Å—ã—Ä –∏–∑ —Å–≤–µ–∂–µ–≥–æ —Ñ–µ—Ä–º–µ—Ä—Å–∫–æ–≥–æ –º–æ–ª–æ–∫–∞",
    price: 450,
    category: "–°—ã—Ä—ã",
    image: "https://images.unsplash.com/photo-1486297678162-eb2a19b0a32d?w=400&h=300&fit=crop",
    unit: "–∫–≥",
    weight: "0.3-0.5 –∫–≥",
    inStock: true
  },
  {
    id: 2, 
    name: "–ú–æ–ª–æ–∫–æ —Ü–µ–ª—å–Ω–æ–µ —Ñ–µ—Ä–º–µ—Ä—Å–∫–æ–µ",
    description: "–°–≤–µ–∂–µ–µ —Ü–µ–ª—å–Ω–æ–µ –º–æ–ª–æ–∫–æ –æ—Ç –∫–æ—Ä–æ–≤ –Ω–∞ —Å–≤–æ–±–æ–¥–Ω–æ–º –≤—ã–ø–∞—Å–µ",
    price: 80,
    category: "–ú–æ–ª–æ–∫–æ", 
    image: "https://images.unsplash.com/photo-1563636619-e9143da7973b?w=400&h=300&fit=crop",
    unit: "–ª",
    weight: "1 –ª",
    inStock: true
  },
  {
    id: 3,
    name: "–¢–≤–æ—Ä–æ–≥ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π 9%",
    description: "–î–æ–º–∞—à–Ω–∏–π —Ç–≤–æ—Ä–æ–≥ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π –∂–∏—Ä–Ω–æ—Å—Ç–∏",
    price: 180,
    category: "–¢–≤–æ—Ä–æ–≥",
    image: "https://images.unsplash.com/photo-1628088062854-d1870b4553da?w=400&h=300&fit=crop", 
    unit: "–≥",
    weight: "500 –≥",
    inStock: true
  }
];

export const mockCategories = [
  { name: '–í—Å–µ', emoji: 'üõí', displayName: 'üõí –í—Å–µ —Ç–æ–≤–∞—Ä—ã' },
  { name: '–°—ã—Ä—ã', emoji: 'üßÄ', displayName: 'üßÄ –°—ã—Ä—ã' },
  { name: '–ú–æ–ª–æ–∫–æ', emoji: 'ü•õ', displayName: 'ü•õ –ú–æ–ª–æ–∫–æ' },
  { name: '–¢–≤–æ—Ä–æ–≥', emoji: 'üç∞', displayName: 'üç∞ –¢–≤–æ—Ä–æ–≥' },
  { name: '–ù–∞–ø–∏—Ç–∫–∏', emoji: 'ü•§', displayName: 'ü•§ –ù–∞–ø–∏—Ç–∫–∏' }
];

// Mock API –¥–ª—è –¥–µ–º–æ —Ä–µ–∂–∏–º–∞
export const mockApi = {
  getProducts: () => Promise.resolve(mockProducts),
  getCategories: () => Promise.resolve(mockCategories.slice(1)),
  createOrder: (orderData) => {
    console.log('Demo order created:', orderData);
    return Promise.resolve({ 
      success: true, 
      orderId: 'demo-' + Date.now(),
      message: '–î–µ–º–æ –∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω! (Backend –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω)'
    });
  }
};